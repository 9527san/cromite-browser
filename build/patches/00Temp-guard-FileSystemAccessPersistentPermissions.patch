From: uazo <uazo@users.noreply.github.com>
Date: Sun, 29 Oct 2023 15:18:24 +0000
Subject: Temp guard FileSystemAccessPersistentPermissions

---
 .../chrome_file_system_access_permission_context.cc  | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/chrome/browser/file_system_access/chrome_file_system_access_permission_context.cc b/chrome/browser/file_system_access/chrome_file_system_access_permission_context.cc
--- a/chrome/browser/file_system_access/chrome_file_system_access_permission_context.cc
+++ b/chrome/browser/file_system_access/chrome_file_system_access_permission_context.cc
@@ -75,13 +75,13 @@
 
 namespace features {
 BASE_FEATURE(kFileSystemAccessPersistentPermissions,
-             "kFileSystemAccessPersistentPermissions",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+             "kFileSystemAccessPersistentPermissions", // guard
+             base::FEATURE_DISABLED_BY_DEFAULT);       // this
 
 #if BUILDFLAG(IS_WIN)
 BASE_FEATURE(kFileSystemAccessLocalUNCPathBlock,
-             "kFileSystemAccessLocalUNCPathBlock",
-             base::FEATURE_ENABLED_BY_DEFAULT);
+             "kFileSystemAccessLocalUNCPathBlock",    // guard
+             base::FEATURE_ENABLED_BY_DEFAULT);       // this
 #endif
 }  // namespace features
 
@@ -377,7 +377,7 @@ bool ShouldBlockAccessToPath(const base::FilePath& check_path,
     }
 
     if (check_path == blocked_path || check_path.IsParent(blocked_path)) {
-      VLOG(1) << "Blocking access to " << check_path
+      LOG(INFO) << "Blocking access to " << check_path
               << " because it is a parent of " << blocked_path << " ("
               << block.base_path_key << ")";
       return true;
@@ -406,7 +406,7 @@ bool ShouldBlockAccessToPath(const base::FilePath& check_path,
   }
 
   // The nearest ancestor blocks access to its children, so block access.
-  VLOG(1) << "Blocking access to " << check_path << " because it is inside "
+  LOG(INFO) << "Blocking access to " << check_path << " because it is inside "
           << nearest_ancestor << " (" << nearest_ancestor_path_key << ")";
   return true;
 }
--
2.25.1
